"""
Triangle, square, pentagonal, hexagonal, heptagonal, and octagonal
numbers are all figurate (polygonal) numbers and are generated by the
following formulae:

Triangle 	  	P3,n=n(n+1)/2 	  	1, 3, 6, 10, 15, ...
Square 	  	        P4,n=n2 	  	1, 4, 9, 16, 25, ...
Pentagonal 	  	P5,n=n(3n1)/2 	  	1, 5, 12, 22, 35, ...
Hexagonal 	  	P6,n=n(2n1) 	  	1, 6, 15, 28, 45, ...
Heptagonal 	  	P7,n=n(5n3)/2 	  	1, 7, 18, 34, 55, ...
Octagonal 	  	P8,n=n(3n2) 	  	1, 8, 21, 40, 65, ...

The ordered set of three 4-digit numbers: 8128, 2882, 8281, has three
interesting properties.

   1. The set is cyclic, in that the last two digits of each number is
      the first two digits of the next number (including the last
      number with the first).
   2. Each polygonal type: triangle (P3,127=8128), square
      (P4,91=8281), and pentagonal (P5,44=2882), is represented by a
      different number in the set.
   3. This is the only set of 4-digit numbers with this property.

Find the sum of the only ordered set of six cyclic 4-digit numbers for
which each polygonal type: triangle, square, pentagonal, hexagonal,
heptagonal, and octagonal, is represented by a different number in the
set.
"""

def fourdigit(x): return 999 < x < 9999
tri4s = filter(fourdigit,[n*(n+1)/2 for n in range(1000)])
sq4s = filter(fourdigit,[n*n for n in range(1000)])
pent4s = filter(fourdigit,[n*(3*n-1)/2 for n in range(1000)])
hex4s = filter(fourdigit,[n*(2*n-1) for n in range(1000)])
hept4s = filter(fourdigit,[n*(5*n-3)/2 for n in range(1000)])
oct4s = filter(fourdigit,[n*(3*n-2) for n in range(1000)])
print oct4s

