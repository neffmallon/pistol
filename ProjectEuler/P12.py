"""
The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

     1: 1
     3: 1,3
     6: 1,2,3,6
    10: 1,2,5,10
    15: 1,3,5,15
    21: 1,3,7,21
    28: 1,2,4,7,14,28

We can see that the 7th triangle number, 28, is the first triangle number to have over five divisors.

Which is the first triangle number to have over five-hundred divisors?
"""
from math import sqrt

def ndivisors(n):
    "just count the divisors of n"
    s = 0
    lim = int(sqrt(n)+1)
    for i in xrange(1,lim):
        if n%i == 0: s+=2
    return s

# Approximate the number of divisors by the number of
#  n and n+1
#for i in range(10000,15000):
for i in range(15000):
    if i % 2 == 0: # i is even
        ndi = ndivisors(i/2)
        ndi2 = ndivisors(i+1)
        nd = ndi*ndi2
    else:
        ndi = ndivisors(i)
        ndi2 = ndivisors((i+1)/2)
        nd = ndi*ndi2
    t = i*(i+1)/2
    if nd > 400: print i,t,nd,ndivisors(t)


